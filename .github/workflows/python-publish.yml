name: Upload Python Package

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  release-build:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Build release distributions
        run: |
          pip install build twine
          python3 -m build
          
      - name: Upload distributions
        uses: actions/upload-artifact@v4
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs: release-build
    
    permissions:
      id-token: write
    steps:
      - uses: actions/checkout@v4  # Повторно используем checkout для доступа ко всем файлам
      - name: Retrieve release distributions
        uses: actions/download-artifact@v4
        with:
          name: release-dists
          path: dist/

      - name: Publish release distributions to PyPI
        id: publish
        continue-on-error: true
        run: |
          twine upload dist/*

      - name: Check for bump_version.py
        run: |
          if [ -f bump_version.py ]; then
            echo "bump_version.py found."
          else
            echo "bump_version.py not found."
            exit 1
          fi

      - name: Bump version if upload failed
        if: steps.publish.outcome == 'failure'
        run: |
          python3 bump_version.py
          git config --local user.email "${{ secrets.EMAIL }}"
          git config --local user.name "${{ secrets.USER }}"
          git commit -m "Bump version"
          git push
